{
    "$schema": "http://json-schema.org/draft-07/schema",
    "type": "object",
    "default": {
        "layout": {
            "rows": []
        }
    },
    "required": [
        "layout"
    ],
    "definitions": {
        "data_table": {
            "$id": "#/definitions/data_table",
            "default": {
                "data_table": true,
                "id": "",
                "text": "",
                "file_path": "<path>",
                "encoding": "utf-8",
                "usecols": [],
                "sort_values": [],
                "index_col": "",
                "page_size": 10,
                "style_as_list_view": "False",
                "style_inner": {},
                "type": "data_table"
            },
            "required": [
                "file_path",
                "data_table"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "data_table": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## DataTable\n- **id**: tipo(str), obrigatório,\n        [Identificador único.]\n\n- **text**: tipo(str), opcional - padrão('')\n        [Texto que aparece acima da tabela.]\n        \n- **file_path**: tipo(str), obrigatório, \n        [Caminho do arquivo de entrada.]\n        \n- **encoding**: tipo(str), opcional - padrão(utf-8),\n        [Encoding utilizado para ler 'file_path'.]\n        \n- **usecols**: tipo(list(str)), opcional - padrão([]),\n        [Lista de nomes de colunas a serem lidas.]\n        \n- **index_col**: tipo(str), opcional - Padrão(None),\n        [Nome da coluna que deve ser adotada como index.]\n        \n- **sort_values**: tipo(list), opcional, padrão([])\n        [Lista com nomes de colunas para serem usadas na ordenação dos registros do arquivo de entrada. Atualmente, não tem como escolher a ordem: ascending=False.]\n        \n- **page_size**: tipo(int), opcional - padrão(10),\n        [Número de linhas com dado em cada página.]\n        \n- **style_as_list_view**: tipo(str), opcional - padrão('False'),\n        [Flag que habilita a vizualização sem bordas verticais.]\n        \n- **style_inner**: tipo(dict), opcional - padrão({})\n        [Dicionário com vários dicionários usados para 'estilizar' o interior do componente.]      \n"
                },
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "map": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "dashboard_links": false,
                "page_size": {
                    "type": "integer",
                    "default": 10,
                    "description": "Número de linhas com dado em cada página"
                },
                "style_as_list_view": {
                    "$comment": "O tipo deveria ser booleano, mas a analise no código python parece funcionar de forma diferente. Verificar",
                    "type": "string",
                    "default": "False",
                    "description": "Flag que habilita a vizualização sem bordas verticais"
                },
                "style_inner": {
                    "type": "object",
                    "default": {},
                    "description": " Dicionário com vários dicionários usados para 'estilizar' o interior do componente"
                }
            }
        },
        "dropdown": {
            "$id": "#/definitions/dropdown",
            "title": "Dropdown",
            "required": [
                "options",
                "dropdown"
            ],
            "default": {
                "dropdown": true,
                "id": "",
                "className_inner": "dropdown_style",
                "text": "",
                "options": [
                    {
                        "<label>": "<value>"
                    }
                ],
                "value": "None",
                "clearable": "True",
                "persistence": "True",
                "persistence_type": "session",
                "multi": "False",
                "placeholder": "",
                "type": "dropdown"
            },
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "dropdown": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Dropdown\n- **id**: tipo(str), obrigatório,\n[Identificador único do componente.]\n\n- **className_inner**: tipo(str), opcional - padrão('dropdown_style')\n[Classe css usada no component.]\n\n- **text**: tipo(str), opcional - padrão('')\n[Mensagem incluída junto ao componente.],\n\n- **options**: tipo(list de dict), obrigatório,\n[Opções que aparecem no componente.\n        Formato: {\n        label: nome que aparece no componente,\n        value: identificador interno\n        }]\n\n- **value**: tipo(str), opcional - padrão(None)\n[Opção inicial do componente.],\n\n- **clearable**: tipo(str()) - padrão('True')\n[Opção para excluir todas as opções selecionadas]\n\n- **persistence**: tipo(str()) - padrão('True')\n[Opção para inserir memória ao componente]\n\n- **persistence_type**: tipo(str) - padrão('session')\n[\n        memory: ao recarregar a página, a informação é perdida da memória do app.\n        local: os dados são mantidos em window.localStorage quando o navegador é fechado.\n        session: os dados são mantidos em window.localStorage até o navegador ser fechado.\n]\n\n- **multi**: tipo(str), opcional - padrão('False')\n[Flag que define se a dropdown permite mais de uma opção selecionada.]\n\n- **placeholder**: tipo(str), opcional - padrão('')\n[Mensagem incluída dentro do componente quando nenhuma opção foi escolhida.]\n"
                },
                "data_table": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "map": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "dashboard_links": false,
                "options": {
                    "type": "array",
                    "description": "Opções que aparecem no componente",
                    "default": [
                        {
                            "label": "value"
                        }
                    ],
                    "minItems": 1,
                    "items": [
                        {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "type": "string",
                                    "default": "value",
                                    "description": "Nome que aparece no componente"
                                }
                            }
                        }
                    ]
                },
                "value": {
                    "type": "string",
                    "description": "Opção inicial do componente",
                    "default": "None"
                },
                "clearable": {
                    "type": "string",
                    "default": "True",
                    "description": "Opção para excluir todas as opções selecionadas"
                },
                "persistence": {
                    "description": "Opção para inserir memória ao componente",
                    "type": "string",
                    "default": "True"
                },
                "persistence_type": {
                    "type": "string",
                    "default": "session",
                    "description": "memory: ao recarregar a página, a informação é perdida da memória do app.\nlocal: os dados são mantidos em window.localStorage quando o navegador é fechado.\nsession: os dados são mantidos em window.localStorage até o navegador ser fechado",
                    "enum": [
                        "memory",
                        "local",
                        "session"
                    ]
                },
                "multi": {
                    "type": "string",
                    "default": "False",
                    "description": "Flag que define se a dropdown permite mais de uma opção selecionada"
                },
                "placeholder": {
                    "type": "string",
                    "description": "Mensagem incluída dentro do componente quando nenhuma opção foi escolhida",
                    "default": ""
                }
            }
        },
        "exploratory": {
            "$id": "#/definitions/exploratory",
            "title": "Exploratory",
            "default": {
                "exploratory": true,
                "id": "",
                "file_path": "<path>",
                "encoding": "utf-8",
                "usecols": [],
                "index_col": "",
                "filter": "",
                "sort_values": [],
                "style_inner": {},
                "type": "exploratory"
            },
            "required": [
                "file_path",
                "exploratory"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "exploratory": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Exploratório\n\n- **id**: tipo(str), obrigatório,\n[Identificador único.]\n\n- **file_path**: tipo(str), obrigatório, \n[Caminho do arquivo (csv)]\n\n- **encoding**: tipo(str), opcional - padrão(utf-8),\n[Encoding utilizado para ler **file_path**.]\n\n- **usecols**: tipo(list(str)), opcional - padrão(todas),\n[Lista de nomes de colunas a serem lidas.]\n\n- **index_col**: tipo(str), opcional - Padrão(None),\n[Nome da coluna que deve ser adotada como index.]\n\n- **filter**: tipo(list), opcional, padrão([])\n[Uma query que permite filtrar os dados.]\n\n- **sort_values**: tipo(list), opcional, padrão([])\n[Lista com nomes de colunas para serem usadas na ordenação dos registros do arquivo de entrada. Atualmente, não tem como escolher a ordem: ascending=False.]\n\n- **style_inner**: tipo(dict), opcional - padrão({})\n[Dicionário com vários dicionários usados para 'estilizar o interior do componente.]\n"
                },
                "data_table": false,
                "dropdown": false,
                "graph": false,
                "img": false,
                "map": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "dashboard_links": false,
                "style_inner": {
                    "type": "object",
                    "default": {},
                    "description": "Dicionário com vários dicionários usados para 'estilizar' o interior do componente"
                }
            }
        },
        "graph": {
            "$id": "#/definitions/graph",
            "title": "Graph",
            "required": [
                "file_path",
                "figure_type",
                "data",
                "graph"
            ],
            "default": {
                "graph": true,
                "id": "",
                "text": "",
                "file_path": "<path>",
                "encoding": "utf-8",
                "usecols": [],
                "index_col": "",
                "filter": "",
                "sort_values": [],
                "figure_type": "scatter-lines",
                "data": [
                    {
                        "col_x": "",
                        "type_col_x": "",
                        "list_cols_y": [],
                        "list_name_traces": []
                    }
                ],
                "layout": {},
                "type": "graph"
            },
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "graph": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Graph\n\n- **id**: tipo(str), obrigatório\n[Identificador único do componente.]\n\n- **dashboards**: tipo(list), opcional - padrão([])\n\n        Uma lista com dicionários, em que cada dicionário descreve\n        uma dashboard:\n\n        'name' - Nome da dashboard, o qual é usado para \n                identificá-la dentro do programa e também para \n                roteamento;\n        'fancy_name' - Nome bonito ou elegante, usado para \n                criar links ou botões para a dashboard;\n        'filename' - Caminho até o arquivo json ou py em que \n                está o layout e callbacks;\n        'keys' - Lista com duas palavras chave usadas na \n                organização das dashboards em 2 níveis; e\n        'enable' - Se enable é diferente de 'yes', o dashboard \n                é ignorado e para todos os efeitos é como se ele não \n                existisse no arquivo de entrada.\n\n\n- **link_type**: tipo(str), opcional - padrão('links')\n[Opção pelo tipo de direcionamento: links ou buttons.]\n\n- **className_inner**: tipo(str), opcional - padrão('dashboard_links_style')\n[Classe css usada no component.]"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "img": false,
                "map": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "dashboard_links": false,
                "data": {
                    "type": "array",
                    "description": "Lista com dicionários conforme definidos pelo plotly, mas incluímos a possibilidade do usuário informar nomes das colunas x e y nos camposcol_x e col_y. Precisa fornecer (x e y) ou (col_x e col_y), caso contrário é gerada uma exceção",
                    "items": {
                        "type": "object",
                        "properties": {
                            "col_x": {
                                "type": "string"
                            },
                            "type_col_x": {
                                "type": "string"
                            },
                            "list_cols_y": {
                                "type": "array"
                            },
                            "list_name_traces": {
                                "type": "array"
                            }
                        }
                    }
                },
                "figure_type": {
                    "type": "string",
                    "default": "scatter-lines",
                    "description": "Tipo da figura"
                },
                "layout": {
                    "type": "object",
                    "default": {},
                    "description": "Dicionário conforme definido pelo plotly"
                }
            }
        },
        "img": {
            "$id": "#/definitions/img",
            "title": "Img",
            "default": {
                "img": true,
                "id": "",
                "className_inner": "img_style",
                "text": "",
                "file_path": "<path>",
                "alt": "",
                "type": "img"
            },
            "required": [
                "img"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "img": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Img\n\n- **id**: tipo(str), obrigatório\n[Identificador único da imagem.]\n\n- **className_inner**: tipo(str), opcional - padrão('img_style')\n[Classe css usada no component.]\n\n- **text**: tipo(str), opcional - padrão('')\n[Texto que aparece acima da imagem.]\n\n- **file_path**: tipo(str), obrigatório\n[Caminho para o arquivo da imagem.],\n\n- **alt**: tipo(str), opcional - padrão('')\n[Texto descritivo do conteúdo da imagem.Serve para dar acessibilidade e facilitar webscrapping.]"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "map": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "dashboard_links": false,
                "alt": {
                    "type": "string",
                    "default": "",
                    "description": "Texto descritivo do conteúdo da imagem. Serve para dar acessibilidade e facilitar webscrapping"
                }
            }
        },
        "map": {
            "$id": "#/definitions/map",
            "title": "Map",
            "default": {
                "map": true,
                "id": "",
                "className_inner": "map_style",
                "title": "",
                "base": {},
                "layers": {},
                "type": "map"
            },
            "required": [
                "map"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "map": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Map\n\n\n- **id**: tipo(str), obrigatório\n[Identificador único.]\n\n- **className_inner**: tipo(str), opcional - padrão('map_style')\n[Classe css usada no component.]\n\n- **title**: tipo(str), opcional - padrão(**)\n[Se for fornecido, é incluído como título no topo da div.],\n\n- **base**: tipo(dict), opcional - padrão({})\n[Parâmetros necessários para desenhar o mapa base. Ver create_map_base.]\n\n- **layers**: tipo(dict), opcional - padrão({}})\n[Parâmetros necessários para desenhar camadas sobre o mapa base. Ver create_data_layers.]"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "dashboard_links": false,
                "title": {
                    "type": "string",
                    "default": "",
                    "description": "Se for fornecido, é incluído como título no topo da div"
                },
                "base": {
                    "type": "object",
                    "default": {},
                    "description": "Parâmetros necessários para desenhar o mapa base. Ver create_map_base"
                },
                "layers": {
                    "type": "object",
                    "default": {},
                    "description": "Parâmetros necessários para desenhar camadas sobre o mapa base. Ver create_data_layers"
                }
            }
        },
        "markdown": {
            "$id": "#/definitions/markdown",
            "title": "Markdown",
            "default": {
                "markdown": true,
                "id": "",
                "className_inner": "",
                "text": "",
                "type": "markdown"
            },
            "required": [
                "text",
                "markdown"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "markdown": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Markdown\n\n\n- **id**: tipo(str), obrigatório\n[Identificador único do componente texto.]\n\n- **className_inner**: tipo(str), opcional - padrão('markdown_style')\n[Classe css usada no component.]\n\n- **text**: tipo(str), obrigatório\n[Texto incluído na div.]"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "map": false,
                "products": false,
                "upload": false,
                "dashboard_links": false
            }
        },
        "upload": {
            "$id": "#/definitions/upload",
            "title": "Upload",
            "default": {
                "upload": true,
                "id": "",
                "className_inner": "upload_style",
                "text": "",
                "multiple": "False",
                "type": "upload"
            },
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "required": [
                "upload"
            ],
            "properties": {
                "upload": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Upload\n\n\n- **id**: tipo(str), obrigatório,\n\n- **className_inner**: tipo(str), opcional - padrão('upload_style')\n\n- **text**: tipo(str), opcional - padrão('Informe o arquivo...')\n\n- **multiple**: tipo(str), opcional - padrão('False')"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "map": false,
                "markdown": false,
                "products": false,
                "dashboard_links": false,
                "multiple": {
                    "type": "string",
                    "default": "False",
                    "description": "Flag que controla se o componente recebe múltiplos arquivos"
                }
            }
        },
        "dashboard_links": {
            "$id": "#/definitions/dashboard_links",
            "default": {
                "dashboard_links": true,
                "id": "",
                "className_inner": "dashboard_links_style",
                "link_type": "links",
                "dashboards": [
                    {
                        "name": "",
                        "fancy_name": "",
                        "filename": "",
                        "keys": [],
                        "enable": "yes"
                    }
                ],
                "type": "dashboard_links"
            },
            "required": [
                "dashboard_links"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "properties": {
                "dashboard_links": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## DashBoard Links\n\n- **id**: tipo(str), obrigatório\n[Identificador único do componente.]\n\n- **dashboards**: tipo(list), opcional - padrão([])\n[Uma lista com dicionários, em que cada dicionário descreve uma dashboard:]\n\n        'name': [Nome da dashboard, o qual é usado para identificá-la dentro do programa e também para roteamento]\n        'fancy_name': [Nome bonito ou elegante, usado para criar links ou botões para a dashboard]\n        'filename': [Caminho até o arquivo json ou py em que está o layout e callbacks]\n        'keys': [Lista com duas palavras chave usadas na organização das dashboards em 2 níveis]\n        'enable': [Se enable é diferente de 'yes' o dashboard é ignorado e para todos os efeitos é como se ele não existisse no arquivo de entrada.]\n\n\n- **link_type**: tipo(str), opcional - padrão'links'\n[Opção pelo tipo de direcionamento: links ou buttons.]\n\n- **className_inner**: tipo(str), opcional - padrão'dashboard_links_style'\n[Classe css usada no component.]"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "map": false,
                "markdown": false,
                "products": false,
                "upload": false,
                "link_type": {
                    "type": "string",
                    "default": "links",
                    "description": "Opção pelo tipo de direcionamento: links ou buttons"
                },
                "dashboards": {
                    "type": "array",
                    "default": [],
                    "description": "Uma lista com dicionários, em que cada dicionário descreve uma dashboard \n---> 'name' - Nome da dashboard, o qual é usado para  identificá-la dentro do programa e também para  roteamento; \n---> 'fancy_name' - Nome bonito ou elegante, usado para  criar links ou botões para a dashboard;\n---> 'filename' - Caminho até o arquivo json ou py em que  está o layout e callbacks; \n---> 'keys' - Lista com duas palavras chave usadas na  organização das dashboards em 2 níveis;\n---> 'enable' - Se enable é diferente de 'yes', o dashboard  é ignorado e para todos os efeitos é como se ele não  existisse no arquivo de entrada ]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Nome da dashboard, o qual é usado para identificá-la dentro do programa e também para roteamento"
                            },
                            "fancy_name": {
                                "type": "string",
                                "description": "Nome bonito ou elegante, usado para criar links ou botões para a dashboard"
                            },
                            "filename": {
                                "type": "string",
                                "description": "Caminho até o arquivo json ou py em que está o layout e callbacks;"
                            },
                            "keys": {
                                "description": "Lista com duas palavras chave usadas na organização das dashboards em 2 níveis"
                            },
                            "enable": {
                                "description": "Se enable é diferente de  , o dashboard é ignorado e para todos os efeitos é como se ele não existisse no arquivo de entrada"
                            }
                        }
                    }
                }
            }
        },
        "products": {
            "$id": "#/definitions/products",
            "title": "Products",
            "default": {
                "products": true,
                "id": "",
                "className_img_inner": "product_img_style",
                "className_markdown_inner": "product_markdown_style",
                "file_path": "<path>",
                "encoding": "utf-8",
                "usecols": [],
                "index_col": "",
                "filter": "",
                "sort_values": [],
                "type": "products"
            },
            "allOf": [
                {
                    "$ref": "#/definitions/component"
                }
            ],
            "required": [
                "products"
            ],
            "properties": {
                "products": {
                    "$ref": "#/definitions/type",
                    "markdownDescription": "## Products\n\n- **id**: tipo(str), obrigatório,\n[Identificador único do componente.]\n\n- **className_img_inner**: tipo(str), opcional - padrão('product_img_style')\n[Classe css usada no component interno: img.]\n\n- **className_markdown_inner**: tipo(str), opcional - padrão('product_markdown_style')\n[Classe css usada no component interno: markdown.]\n\n- **file_path**: tipo(str), obrigatório,\n[Caminho para o arquivo csv de produtos.]\n\n- **encoding**: tipo(str), opcional - padrão(utf-8),\n- [Encoding utilizado para ler 'file_path'.]\n\n- **usecols**: tipo(list(str)), opcional - padrão(todas),\n[Lista de nomes de colunas a serem lidas.]\n\n- **index_col**: tipo(str), opcional - Padrão(None),\n[Nome da coluna que deve ser adotada como index.]\n\n- **filter**: tipo(str ou lista de str), opcional, padrão([])\n[\n        Uma query ou uma lista de query que permite filtrar \n        registros do arquivo de entrada.\n]\n\n- **sort_values**: tipo(list), opcional, padrão([])\n[\n        Lista com nomes de colunas para serem usadas na ordenação \n        dos registros do arquivo de entrada. \n        Atualmente, não tem como escolher a ordem: ascending=False.\n]"
                },
                "data_table": false,
                "dropdown": false,
                "exploratory": false,
                "graph": false,
                "img": false,
                "map": false,
                "markdown": false,
                "upload": false,
                "dashboard_links": false,
                "className_img_inner": {
                    "type": "string",
                    "default": "product_img_style",
                    "description": "Classe css usada no component interno: img"
                },
                "className_markdown_inner": {
                    "type": "string",
                    "default": "product_markdown_style",
                    "description": "Classe css usada no component interno: markdown"
                }
            }
        },
        "type": {
            "$id": "#/definitions/type",
            "type": "boolean",
            "default": true
        },
        "component": {
            "$id": "#/definitions/component",
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "sort_values": {
                    "type": "array",
                    "default": [],
                    "description": "Lista com nomes de colunas para serem usadas na ordenação dos registros do arquivo de entrada. Atualmente, não tem como escolher a ordem: ascending=False"
                },
                "className_inner": {
                    "type": "string",
                    "description": "Classe CSS utilizada"
                },
                "id": {
                    "type": "string",
                    "description": "Id do componente"
                },
                "encoding": {
                    "type": "string",
                    "default": "utf-8",
                    "description": "Encoding utilizado para ler 'file_path'"
                },
                "file_path": {
                    "type": "string",
                    "description": "Caminho do arquivo"
                },
                "text": {
                    "type": "string",
                    "default": "",
                    "description": "Texto incluída junto ao componente"
                },
                "usecols": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Nome de coluna a ser lida"
                    },
                    "description": "Lista de nomes de colunas a serem lidas"
                },
                "filter": {
                    "type": "string",
                    "description": "Uma query que permite filtrar os dados"
                },
                "index_col": {
                    "type": "string",
                    "description": "Nome da coluna que deve ser adotada como index",
                    "default": ""
                }
            }
        },
        "className": {
            "$id": "#/definitions/className",
            "type": "string",
            "description": "Classe CSS utilizada"
        },
        "row": {
            "$id": "#/definitions/row",
            "type": "object",
            "required": [
                "columns"
            ],
            "default": {
                "className": "",
                "columns": []
            },
            "properties": {
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            }
        },
        "rows": {
            "$id": "#/definitions/rows",
            "type": "array",
            "additionalProperties": false,
            "minItems": 1,
            "description": "Cada item é disposto como uma nova linha",
            "items": {
                "$ref": "#/definitions/row"
            }
        },
        "columns": {
            "$id": "#/definitions/columns",
            "type": "array",
            "additionalProperties": false,
            "minItems": 1,
            "default": [],
            "description": "Cada item é disposto como uma nova coluna",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/data_table"
                    },
                    {
                        "$ref": "#/definitions/dropdown"
                    },
                    {
                        "$ref": "#/definitions/exploratory"
                    },
                    {
                        "$ref": "#/definitions/graph"
                    },
                    {
                        "$ref": "#/definitions/img"
                    },
                    {
                        "$ref": "#/definitions/map"
                    },
                    {
                        "$ref": "#/definitions/markdown"
                    },
                    {
                        "$ref": "#/definitions/products"
                    },
                    {
                        "$ref": "#/definitions/upload"
                    },
                    {
                        "$ref": "#/definitions/dashboard_links"
                    }
                ]
            }
        }
    },
    "properties": {
        "callback": {
            "$id": "#/properties/callback",
            "type": "object",
            "default": {
                "name_module": "",
                "file_path": ""
            },
            "required": [
                "name_module",
                "file_path"
            ],
            "properties": {
                "name_module": {
                    "type": "string",
                    "default": ""
                },
                "file_path": {
                    "type": "string",
                    "default": ""
                }
            }
        },
        "layout": {
            "$id": "#/properties/layout",
            "type": "object",
            "title": "The layout schema",
            "required": [
                "rows"
            ],
            "default": {
                "rows": []
            },
            "properties": {
                "className": {
                    "$ref": "#/definitions/className"
                },
                "rows": {
                    "$ref": "#/definitions/rows"
                }
            }
        },
        "additionalProperties": false
    }
}